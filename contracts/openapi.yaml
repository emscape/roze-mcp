openapi: 3.0.3
info:
  title: Roze API
  description: API contract for Roze application services
  version: 1.0.0
  contact:
    name: Roze Team
  license:
    name: MIT

servers:
  - url: http://127.0.0.1:5001/PROJECT_ID/us-central1
    description: Development server (Firebase Emulator)
  - url: https://REGION-PROJECT_ID.cloudfunctions.net
    description: Production server

paths:
  /healthz:
    get:
      summary: Health check endpoint
      description: Returns the health status of the API
      operationId: healthCheck
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
                  timestamp:
                    type: string
                    format: date-time
                  version:
                    type: string
                    example: "1.0.0"
        '503':
          description: Service is unhealthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
                  error:
                    type: string

  /v1/orders:
    post:
      summary: Create a new order
      description: Creates a new order with customer information and items
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/subscribe:
    post:
      summary: Create a new subscription
      description: Creates a new email subscription
      operationId: createSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionRequest'
      responses:
        '201':
          description: Subscription created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Email already subscribed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    CreateOrderRequest:
      type: object
      required: [customer, items, total]
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
        items:
          type: array
          minItems: 1
          maxItems: 50
          items:
            $ref: '#/components/schemas/OrderItem'
        total:
          type: number
          minimum: 0
          multipleOf: 0.01
        currency:
          type: string
          enum: [USD, EUR, GBP, CAD]
          default: USD
        notes:
          type: string
          maxLength: 1000

    Customer:
      type: object
      required: [email, name]
      properties:
        email:
          type: string
          format: email
        name:
          type: string
          minLength: 1
          maxLength: 100
        phone:
          type: string
          pattern: '^\\+?[1-9]\\d{1,14}$'

    OrderItem:
      type: object
      required: [sku, name, qty, price]
      properties:
        sku:
          type: string
          minLength: 1
          maxLength: 50
        name:
          type: string
          minLength: 1
          maxLength: 200
        qty:
          type: integer
          minimum: 1
          maximum: 999
        price:
          type: number
          minimum: 0
          multipleOf: 0.01
        description:
          type: string
          maxLength: 500

    CreateSubscriptionRequest:
      type: object
      required: [email]
      properties:
        email:
          type: string
          format: email
        firstName:
          type: string
          minLength: 1
          maxLength: 50
        lastName:
          type: string
          minLength: 1
          maxLength: 50
        preferences:
          $ref: '#/components/schemas/SubscriptionPreferences'
        source:
          type: string
          enum: [website, mobile_app, social_media, referral, other]
          default: website
        tags:
          type: array
          maxItems: 10
          items:
            type: string
            minLength: 1
            maxLength: 30

    SubscriptionPreferences:
      type: object
      properties:
        newsletter:
          type: boolean
          default: true
        promotions:
          type: boolean
          default: false
        productUpdates:
          type: boolean
          default: false

    OrderResponse:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
          enum: [pending, confirmed, processing, shipped, delivered, cancelled]
        createdAt:
          type: string
          format: date-time
        total:
          type: number

    SubscriptionResponse:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        status:
          type: string
          enum: [active, pending, unsubscribed]
        createdAt:
          type: string
          format: date-time

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        code:
          type: string
        details:
          type: object
